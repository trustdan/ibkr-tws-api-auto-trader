name: Go Scanner CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'go/**'
      - '.github/workflows/go-ci-cd.yml'
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
    paths:
      - 'go/**'

jobs:
  lint-test-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true
      
      - name: Format check
        run: |
          cd go
          if [ -d "." ]; then
            test -z "$(gofmt -l .)"
          fi
      
      - name: Go Vet
        run: |
          cd go
          if [ -d "." ]; then
            go vet ./...
          fi
      
      - name: Go Test
        run: |
          cd go
          if [ -d "." ]; then
            go test -v ./...
          fi
  
  build-and-push:
    needs: lint-test-build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/go-scanner
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=branch
            type=sha,format=short
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./go
          file: ./go/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/go-scanner:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/go-scanner:buildcache,mode=max 