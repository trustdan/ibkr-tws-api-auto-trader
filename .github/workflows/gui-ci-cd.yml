name: GUI CI/CD

on:
  pull_request:
    branches: [ main ]
  push:
    tags: [ 'v*' ]

jobs:
  lint-and-build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest
      
      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci
      
      - name: Lint and Type Check
        run: |
          cd frontend
          npm run lint
          npm run check
      
      - name: Build Wails App
        run: |
          wails build
      
      - name: Package app (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          mkdir -p artifacts
          cp build/bin/TraderAdmin.exe artifacts/
          7z a artifacts/TraderAdmin-windows.zip ./artifacts/TraderAdmin.exe
      
      - name: Package app (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          mkdir -p artifacts
          cp -r build/bin/TraderAdmin.app artifacts/
          cd artifacts
          zip -r TraderAdmin-macos.zip TraderAdmin.app
      
      - name: Package app (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir -p artifacts
          cp build/bin/TraderAdmin artifacts/
          cd artifacts
          tar -czvf TraderAdmin-linux.tar.gz TraderAdmin
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: TraderAdmin-${{ matrix.os }}
          path: artifacts/

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: lint-and-build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Download Windows artifacts
        uses: actions/download-artifact@v3
        with:
          name: TraderAdmin-windows-latest
          path: release-artifacts/windows/
      
      - name: Download macOS artifacts
        uses: actions/download-artifact@v3
        with:
          name: TraderAdmin-macos-latest
          path: release-artifacts/macos/
      
      - name: Download Linux artifacts
        uses: actions/download-artifact@v3
        with:
          name: TraderAdmin-ubuntu-latest
          path: release-artifacts/linux/
      
      - name: Display structure of downloaded files
        run: ls -R release-artifacts/
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: TraderAdmin ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            release-artifacts/windows/TraderAdmin-windows.zip
            release-artifacts/macos/TraderAdmin-macos.zip
            release-artifacts/linux/TraderAdmin-linux.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 